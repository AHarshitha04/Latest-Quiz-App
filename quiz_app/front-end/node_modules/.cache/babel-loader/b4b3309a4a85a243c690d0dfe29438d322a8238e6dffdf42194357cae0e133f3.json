{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Daily work/october/24-10-2023/1-1questions Quiz App/client/src/Pages/Paper/Paper.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import quiz from '../../Data/quesAns'\n// import './Paper.css'\n// import RightSidebar from '../../Components/RightSidebar/RightSidebar';\n// import PaperHeader from '../../Components/PaperHeader/PaperHeader'\n\n// // Defining Timer code \n// const formatTime = (time) => {\n//     let minutes = Math.floor(time / 60);\n//     let seconds = Math.floor(time - minutes * 60);\n\n//     if (minutes < 10) minutes = '0' + minutes;\n//     if (seconds < 10) seconds = '0' + seconds;\n//     return minutes + ':' + seconds;\n// }; // End of Defining Timer code \n\n// const Paper = ({ seconds, answeredQuestions }) => {\n\n//     const [activeQuestion, setActiveQuestion] = useState(0);\n//     const handleQuestionSelect = (questionNumber) => {\n//         setActiveQuestion(questionNumber - 1);\n//     }\n\n//     // const [questionStatus, setQuestionStatus] = useState(Array(30).fill('notAnswered'))\n//     // const [activeQuestion, setActiveQuestion] = useState(0)\n//     // const [selectedAnswer, setSelectedAnswer] = useState('') \n\n//     const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(''));\n//     const [showResult, setShowResult] = useState(false)\n//     const [result, setResult] = useState({\n//         score: 0,\n//         correctAnswers: 0,\n//         wrongAnswers: 0,\n//     })\n\n//     const { questions } = quiz\n//     const { question, choices, correctAnswer } = questions[activeQuestion]\n//     const onClickNext = () => {\n//         setResult((prev) =>\n//             selectedAnswers[activeQuestion] === correctAnswer\n//                 ? {\n//                     ...prev,\n//                     score: prev.score + 5,\n//                     correctAnswers: prev.correctAnswers + 1,\n//                 }\n//                 : { ...prev, wrongAnswers: prev.wrongAnswers + 1 }\n//         );\n//         if (activeQuestion !== questions.length - 1) {\n//             setActiveQuestion((prev) => prev + 1);\n//         } else {\n//             // setActiveQuestion(0);\n//             setShowResult(true);\n//             calculateResult();//new added code\n//         }\n//     };\n\n//     const onAnswerSelected = (OptionLetter) => {\n//         // Update the selected answer for the current question\n//         const updatedSelectedAnswers = [...selectedAnswers];\n//         updatedSelectedAnswers[activeQuestion] = OptionLetter;\n//         setSelectedAnswers(updatedSelectedAnswers);\n//         // setSelectedAnswers(updatedSelectedAnswers, OptionLetter);\n\n//     };\n\n//     const clearResponse = () => {\n//         // Clear the response for the current question\n//         const updatedSelectedAnswers = [...selectedAnswers];\n//         updatedSelectedAnswers[activeQuestion] = '';\n//         setSelectedAnswers(updatedSelectedAnswers);\n//     };\n\n//     const goToPreviousQuestion = () => {\n//         // Move to the previous question\n//         if (activeQuestion > 0) {\n//             setActiveQuestion((prev) => prev - 1);\n//         }\n//     };\n\n//     const addLeadingZero = (number) => (number > 9 ? number : `0${number}`)\n//     const [countdown, setCountDown] = useState(seconds);\n//     useEffect(() => {\n//         const timerId = setInterval(() => {\n//             setCountDown((prevCountDown) =>\n//                 prevCountDown - 1\n//             );\n//         }, 1000)\n//         return () => {\n//             clearInterval(timerId);\n//         };\n//     }, [])\n\n//     useEffect(() => {\n//         if (countdown <= 0) {\n//             setShowResult(true);\n//             // clearInterval(timerId.current);\n//             // alert(\"End\");\n//         }\n//     }, [countdown]);\n\n//    // NEW ADDED CODE\n\n//     // const [showResult, setShowResult] = useState(false);\n//     const [accuracy, setAccuracy] = useState(0);\n//     const [averageScore, setAverageScore] = useState(0);\n//     const [topScore, setTopScore] = useState(0);\n//     const [liveRank, setLiveRank] = useState(0);\n\n//     const calculateResult = () => {\n//         // Calculate accuracy\n//         const totalAttempted = answeredQuestions.length;\n//         const totalCorrect = result.correctAnswers;\n//         const calculatedAccuracy = (totalCorrect / totalAttempted) * 100;\n//         setAccuracy(calculatedAccuracy.toFixed(2));\n\n//         // Calculate average score\n//         const calculatedAverageScore = result.score / totalAttempted;\n//         setAverageScore(calculatedAverageScore.toFixed(2));\n\n//         // Placeholder for live ranking data - Replace this with actual data\n//         const calculatedTopScore = 100;\n//         const calculatedLiveRank = 1;\n\n//         setTopScore(calculatedTopScore);\n//         setLiveRank(calculatedLiveRank);\n//     };\n\n//     // const onClickSubmit = () => {\n//     //     calculateResult();\n//     //     setShowResult(true);\n//     // };\n\n//     return (\n\n//         <div className='main'>\n//             <div className='sub-main'>\n//                 <div><PaperHeader /></div>\n//                 <div className=\"quiz-container\">\n//                     {!showResult ? (\n//                         <div>\n//                             <div className='subjects'>\n//                                 <button className='subject-btn'>Mathematics</button>\n//                                 <button className='subject-btn'>Physics</button>\n//                                 <button className='subject-btn'>Chemistry</button>\n//                             </div>\n//                             <div className='second-header'>\n//                                 <div className='single-select-question'>\n//                                     Single Select Question\n//                                 </div>\n//                                 <div className='right-header'>\n//                                     <div className='marks'>\n//                                         Marks: <div className='plus-mark'>+1</div>\n//                                         <div className='minus-mark'>-1</div>\n//                                     </div>\n//                                     <div className='timer'>\n//                                         <h3>Time Left: {formatTime(countdown)}</h3>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                             <div className='question-no'>\n//                                 <span className=\"active-question-no\">Question No. {addLeadingZero(activeQuestion + 1)}</span>\n//                                 <span className=\"total-question\"> of {addLeadingZero(questions.length)}</span>\n//                             </div>\n\n//                             <h2 className='question'><img src={question} alt=\"question\" /></h2>\n\n//                             <ul className='options-container'>\n//                                 {choices.map((answer, index) => (\n//                                     <li key={answer}>\n//                                         <input type=\"radio\"\n//                                             // id={answer}\n//                                             id={`option-${index}`}\n//                                             name='answer'\n//                                             value={answer}\n//                                             checked={selectedAnswers[activeQuestion] === answer}\n//                                             onChange={() => onAnswerSelected(answer)} />\n\n//                                         <label className='alpha-index' htmlFor={`option-${index}`}>\n//                                             {/* htmlFor={answer} */}\n//                                             {String.fromCharCode(65 + index)}.\n//                                             <img src={answer} alt=\"answer\" />\n//                                         </label>\n//                                     </li>\n//                                 ))}\n//                             </ul>\n\n//                             <div className=\"flex-right\">\n//                                 <button className='clear-btn'>Mark for Review & Next</button>\n//                                 <button className='clear-btn' onClick={clearResponse}>Clear Response</button>\n//                                 <button className='previous-btn' onClick={goToPreviousQuestion} disabled={activeQuestion === 0}>\n//                                     <i class=\"fa-solid fa-angles-left\"></i>\n//                                     Previous\n//                                 </button>\n//                                 <button className='save-btn' onClick={onClickNext} disabled={!selectedAnswers[activeQuestion]}>\n//                                     {activeQuestion === questions.length - 1 ? 'Submit' : 'Save & Next'}<i class=\"fa-solid fa-angles-right\"></i>\n//                                 </button>\n\n//                             </div>\n//                         </div>\n//                     ) : (\n//                         <div className=\"result\">\n//                             <h3>Result</h3>\n//                             <p>\n//                                 Total Questions: <span>{questions.length}</span>\n//                             </p>\n//                             <p>\n//                                 Total Score:<span> {result.score}</span>\n//                             </p>\n//                             <p>\n//                                 Correct Answers:<span> {result.correctAnswers}</span>\n//                             </p>\n//                             <p>\n//                                 Wrong Answers:<span> {result.wrongAnswers}</span>\n//                             </p>\n//                             <p>\n//                                 Accuracy:<span> {accuracy}%</span>\n//                             </p>\n//                             <p>\n//                                 Average Score:<span> {averageScore}</span>\n//                             </p>\n//                             <p>\n//                                 Top Score:<span> {topScore}</span>\n//                             </p>\n//                             <p>\n//                                 Live Rank:<span> {liveRank}</span>\n//                             </p>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//             <div className='rightsidebar'><RightSidebar onQuestionSelect={handleQuestionSelect} answeredQuestions={answeredQuestions} /></div>\n//         </div>\n\n//     )\n// }\n\n// export default Paper\n\nimport React, { useEffect, useState } from 'react';\nimport quiz from '../../Data/quesAns';\nimport './Paper.css';\nimport RightSidebar from '../../Components/RightSidebar/RightSidebar';\nimport PaperHeader from '../../Components/PaperHeader/PaperHeader';\n\n// Defining Timer code \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  let minutes = Math.floor(time / 60);\n  let seconds = Math.floor(time - minutes * 60);\n  if (minutes < 10) minutes = '0' + minutes;\n  if (seconds < 10) seconds = '0' + seconds;\n  return minutes + ':' + seconds;\n}; // End of Defining Timer code \n\nconst Paper = ({\n  seconds,\n  answeredQuestions\n}) => {\n  _s();\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const handleQuestionSelect = questionNumber => {\n    setActiveQuestion(questionNumber - 1);\n  };\n\n  // const [questionStatus, setQuestionStatus] = useState(Array(30).fill('notAnswered'))\n  // const [activeQuestion, setActiveQuestion] = useState(0)\n  // const [selectedAnswer, setSelectedAnswer] = useState('') \n\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(''));\n  const [showResult, setShowResult] = useState(false);\n  const [result, setResult] = useState({\n    score: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0\n  });\n  const {\n    questions\n  } = quiz;\n  const {\n    question,\n    choices,\n    correctAnswer\n  } = questions[activeQuestion];\n  const onClickNext = () => {\n    setResult(prev => selectedAnswers[activeQuestion] === correctAnswer ? {\n      ...prev,\n      score: prev.score + 5,\n      correctAnswers: prev.correctAnswers + 1\n    } : {\n      ...prev,\n      wrongAnswers: prev.wrongAnswers + 1\n    });\n    if (activeQuestion !== questions.length - 1) {\n      setActiveQuestion(prev => prev + 1);\n    } else {\n      // setActiveQuestion(0);\n      setShowResult(true);\n      calculateResult(); //new added code\n    }\n  };\n\n  const onAnswerSelected = OptionLetter => {\n    // Update the selected answer for the current question\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[activeQuestion] = OptionLetter;\n    setSelectedAnswers(updatedSelectedAnswers);\n    // setSelectedAnswers(updatedSelectedAnswers, OptionLetter);\n  };\n\n  const clearResponse = () => {\n    // Clear the response for the current question\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[activeQuestion] = '';\n    setSelectedAnswers(updatedSelectedAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    // Move to the previous question\n    if (activeQuestion > 0) {\n      setActiveQuestion(prev => prev - 1);\n    }\n  };\n  const addLeadingZero = number => number > 9 ? number : `0${number}`;\n  const [countdown, setCountDown] = useState(seconds);\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setCountDown(prevCountDown => prevCountDown - 1);\n    }, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n  useEffect(() => {\n    if (countdown <= 0) {\n      setShowResult(true);\n      // clearInterval(timerId.current);\n      // alert(\"End\");\n    }\n  }, [countdown]);\n\n  // NEW ADDED CODE\n\n  // const [showResult, setShowResult] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [averageScore, setAverageScore] = useState(0);\n  const [topScore, setTopScore] = useState(0);\n  const [liveRank, setLiveRank] = useState(0);\n  const calculateResult = () => {\n    // Calculate accuracy\n    const totalAttempted = answeredQuestions.length;\n    const totalCorrect = result.correctAnswers;\n    const calculatedAccuracy = totalCorrect / totalAttempted * 100;\n    setAccuracy(calculatedAccuracy.toFixed(2));\n\n    // Calculate average score\n    const calculatedAverageScore = result.score / totalAttempted;\n    setAverageScore(calculatedAverageScore.toFixed(2));\n\n    // Placeholder for live ranking data - Replace this with actual data\n    const calculatedTopScore = 100;\n    const calculatedLiveRank = 1;\n    setTopScore(calculatedTopScore);\n    setLiveRank(calculatedLiveRank);\n  };\n\n  // const onClickSubmit = () => {\n  //     calculateResult();\n  //     setShowResult(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PaperHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-container\",\n        children: !showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subjects\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"subject-btn\",\n              children: \"Mathematics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"subject-btn\",\n              children: \"Physics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"subject-btn\",\n              children: \"Chemistry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"second-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-select-question\",\n              children: \"Single Select Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"marks\",\n                children: [\"Marks: \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plus-mark\",\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"minus-mark\",\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Time Left: \", formatTime(countdown)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-no\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-question-no\",\n              children: [\"Question No. \", addLeadingZero(activeQuestion + 1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-question\",\n              children: [\" of \", addLeadingZero(questions.length)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"question\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: question,\n              alt: \"question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"options-container\",\n            children: choices.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\"\n                // id={answer}\n                ,\n                id: `option-${index}`,\n                name: \"answer\",\n                value: answer,\n                checked: selectedAnswers[activeQuestion] === answer,\n                onChange: () => onAnswerSelected(answer)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"alpha-index\",\n                htmlFor: `option-${index}`,\n                children: [String.fromCharCode(65 + index), \".\", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: answer,\n                  alt: \"answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 41\n              }, this)]\n            }, answer, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-btn\",\n              children: \"Mark for Review & Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-btn\",\n              onClick: clearResponse,\n              children: \"Clear Response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"previous-btn\",\n              onClick: goToPreviousQuestion,\n              disabled: activeQuestion === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-angles-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 37\n              }, this), \"Previous\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              onClick: onClickNext,\n              disabled: !selectedAnswers[activeQuestion],\n              children: [activeQuestion === questions.length - 1 ? 'Submit' : 'Save & Next', /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-angles-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 105\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Questions: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: questions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", result.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct Answers:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", result.correctAnswers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wrong Answers:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", result.wrongAnswers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Accuracy:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", accuracy, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Average Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", averageScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Top Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", topScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Live Rank:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", liveRank]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightsidebar\",\n      children: /*#__PURE__*/_jsxDEV(RightSidebar, {\n        onQuestionSelect: handleQuestionSelect,\n        answeredQuestions: answeredQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 9\n  }, this);\n};\n_s(Paper, \"tP/WPDD2nhXnTUMMPhAXlx/oYx0=\");\n_c = Paper;\nexport default Paper;\nvar _c;\n$RefreshReg$(_c, \"Paper\");","map":{"version":3,"names":["React","useEffect","useState","quiz","RightSidebar","PaperHeader","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","Paper","answeredQuestions","_s","activeQuestion","setActiveQuestion","handleQuestionSelect","questionNumber","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","showResult","setShowResult","result","setResult","score","correctAnswers","wrongAnswers","question","choices","correctAnswer","onClickNext","prev","calculateResult","onAnswerSelected","OptionLetter","updatedSelectedAnswers","clearResponse","goToPreviousQuestion","addLeadingZero","number","countdown","setCountDown","timerId","setInterval","prevCountDown","clearInterval","accuracy","setAccuracy","averageScore","setAverageScore","topScore","setTopScore","liveRank","setLiveRank","totalAttempted","totalCorrect","calculatedAccuracy","toFixed","calculatedAverageScore","calculatedTopScore","calculatedLiveRank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","answer","index","type","id","name","value","checked","onChange","htmlFor","String","fromCharCode","onClick","disabled","class","onQuestionSelect","_c","$RefreshReg$"],"sources":["/home/user/Documents/Daily work/october/24-10-2023/1-1questions Quiz App/client/src/Pages/Paper/Paper.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import quiz from '../../Data/quesAns'\n// import './Paper.css'\n// import RightSidebar from '../../Components/RightSidebar/RightSidebar';\n// import PaperHeader from '../../Components/PaperHeader/PaperHeader'\n\n\n// // Defining Timer code \n// const formatTime = (time) => {\n//     let minutes = Math.floor(time / 60);\n//     let seconds = Math.floor(time - minutes * 60);\n\n//     if (minutes < 10) minutes = '0' + minutes;\n//     if (seconds < 10) seconds = '0' + seconds;\n//     return minutes + ':' + seconds;\n// }; // End of Defining Timer code \n\n\n\n// const Paper = ({ seconds, answeredQuestions }) => {\n\n//     const [activeQuestion, setActiveQuestion] = useState(0);\n//     const handleQuestionSelect = (questionNumber) => {\n//         setActiveQuestion(questionNumber - 1);\n//     }\n\n//     // const [questionStatus, setQuestionStatus] = useState(Array(30).fill('notAnswered'))\n//     // const [activeQuestion, setActiveQuestion] = useState(0)\n//     // const [selectedAnswer, setSelectedAnswer] = useState('') \n\n//     const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(''));\n//     const [showResult, setShowResult] = useState(false)\n//     const [result, setResult] = useState({\n//         score: 0,\n//         correctAnswers: 0,\n//         wrongAnswers: 0,\n//     })\n\n\n\n//     const { questions } = quiz\n//     const { question, choices, correctAnswer } = questions[activeQuestion]\n//     const onClickNext = () => {\n//         setResult((prev) =>\n//             selectedAnswers[activeQuestion] === correctAnswer\n//                 ? {\n//                     ...prev,\n//                     score: prev.score + 5,\n//                     correctAnswers: prev.correctAnswers + 1,\n//                 }\n//                 : { ...prev, wrongAnswers: prev.wrongAnswers + 1 }\n//         );\n//         if (activeQuestion !== questions.length - 1) {\n//             setActiveQuestion((prev) => prev + 1);\n//         } else {\n//             // setActiveQuestion(0);\n//             setShowResult(true);\n//             calculateResult();//new added code\n//         }\n//     };\n\n\n//     const onAnswerSelected = (OptionLetter) => {\n//         // Update the selected answer for the current question\n//         const updatedSelectedAnswers = [...selectedAnswers];\n//         updatedSelectedAnswers[activeQuestion] = OptionLetter;\n//         setSelectedAnswers(updatedSelectedAnswers);\n//         // setSelectedAnswers(updatedSelectedAnswers, OptionLetter);\n\n//     };\n\n\n\n//     const clearResponse = () => {\n//         // Clear the response for the current question\n//         const updatedSelectedAnswers = [...selectedAnswers];\n//         updatedSelectedAnswers[activeQuestion] = '';\n//         setSelectedAnswers(updatedSelectedAnswers);\n//     };\n\n//     const goToPreviousQuestion = () => {\n//         // Move to the previous question\n//         if (activeQuestion > 0) {\n//             setActiveQuestion((prev) => prev - 1);\n//         }\n//     };\n\n\n\n//     const addLeadingZero = (number) => (number > 9 ? number : `0${number}`)\n//     const [countdown, setCountDown] = useState(seconds);\n//     useEffect(() => {\n//         const timerId = setInterval(() => {\n//             setCountDown((prevCountDown) =>\n//                 prevCountDown - 1\n//             );\n//         }, 1000)\n//         return () => {\n//             clearInterval(timerId);\n//         };\n//     }, [])\n\n//     useEffect(() => {\n//         if (countdown <= 0) {\n//             setShowResult(true);\n//             // clearInterval(timerId.current);\n//             // alert(\"End\");\n//         }\n//     }, [countdown]);\n\n\n//    // NEW ADDED CODE\n\n//     // const [showResult, setShowResult] = useState(false);\n//     const [accuracy, setAccuracy] = useState(0);\n//     const [averageScore, setAverageScore] = useState(0);\n//     const [topScore, setTopScore] = useState(0);\n//     const [liveRank, setLiveRank] = useState(0);\n\n//     const calculateResult = () => {\n//         // Calculate accuracy\n//         const totalAttempted = answeredQuestions.length;\n//         const totalCorrect = result.correctAnswers;\n//         const calculatedAccuracy = (totalCorrect / totalAttempted) * 100;\n//         setAccuracy(calculatedAccuracy.toFixed(2));\n\n//         // Calculate average score\n//         const calculatedAverageScore = result.score / totalAttempted;\n//         setAverageScore(calculatedAverageScore.toFixed(2));\n\n//         // Placeholder for live ranking data - Replace this with actual data\n//         const calculatedTopScore = 100;\n//         const calculatedLiveRank = 1;\n\n//         setTopScore(calculatedTopScore);\n//         setLiveRank(calculatedLiveRank);\n//     };\n\n//     // const onClickSubmit = () => {\n//     //     calculateResult();\n//     //     setShowResult(true);\n//     // };\n\n\n\n\n\n\n\n\n\n//     return (\n\n//         <div className='main'>\n//             <div className='sub-main'>\n//                 <div><PaperHeader /></div>\n//                 <div className=\"quiz-container\">\n//                     {!showResult ? (\n//                         <div>\n//                             <div className='subjects'>\n//                                 <button className='subject-btn'>Mathematics</button>\n//                                 <button className='subject-btn'>Physics</button>\n//                                 <button className='subject-btn'>Chemistry</button>\n//                             </div>\n//                             <div className='second-header'>\n//                                 <div className='single-select-question'>\n//                                     Single Select Question\n//                                 </div>\n//                                 <div className='right-header'>\n//                                     <div className='marks'>\n//                                         Marks: <div className='plus-mark'>+1</div>\n//                                         <div className='minus-mark'>-1</div>\n//                                     </div>\n//                                     <div className='timer'>\n//                                         <h3>Time Left: {formatTime(countdown)}</h3>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                             <div className='question-no'>\n//                                 <span className=\"active-question-no\">Question No. {addLeadingZero(activeQuestion + 1)}</span>\n//                                 <span className=\"total-question\"> of {addLeadingZero(questions.length)}</span>\n//                             </div>\n\n//                             <h2 className='question'><img src={question} alt=\"question\" /></h2>\n\n//                             <ul className='options-container'>\n//                                 {choices.map((answer, index) => (\n//                                     <li key={answer}>\n//                                         <input type=\"radio\"\n//                                             // id={answer}\n//                                             id={`option-${index}`}\n//                                             name='answer'\n//                                             value={answer}\n//                                             checked={selectedAnswers[activeQuestion] === answer}\n//                                             onChange={() => onAnswerSelected(answer)} />\n\n\n//                                         <label className='alpha-index' htmlFor={`option-${index}`}>\n//                                             {/* htmlFor={answer} */}\n//                                             {String.fromCharCode(65 + index)}.\n//                                             <img src={answer} alt=\"answer\" />\n//                                         </label>\n//                                     </li>\n//                                 ))}\n//                             </ul>\n\n//                             <div className=\"flex-right\">\n//                                 <button className='clear-btn'>Mark for Review & Next</button>\n//                                 <button className='clear-btn' onClick={clearResponse}>Clear Response</button>\n//                                 <button className='previous-btn' onClick={goToPreviousQuestion} disabled={activeQuestion === 0}>\n//                                     <i class=\"fa-solid fa-angles-left\"></i>\n//                                     Previous\n//                                 </button>\n//                                 <button className='save-btn' onClick={onClickNext} disabled={!selectedAnswers[activeQuestion]}>\n//                                     {activeQuestion === questions.length - 1 ? 'Submit' : 'Save & Next'}<i class=\"fa-solid fa-angles-right\"></i>\n//                                 </button>\n\n//                             </div>\n//                         </div>\n//                     ) : (\n//                         <div className=\"result\">\n//                             <h3>Result</h3>\n//                             <p>\n//                                 Total Questions: <span>{questions.length}</span>\n//                             </p>\n//                             <p>\n//                                 Total Score:<span> {result.score}</span>\n//                             </p>\n//                             <p>\n//                                 Correct Answers:<span> {result.correctAnswers}</span>\n//                             </p>\n//                             <p>\n//                                 Wrong Answers:<span> {result.wrongAnswers}</span>\n//                             </p>\n//                             <p>\n//                                 Accuracy:<span> {accuracy}%</span>\n//                             </p>\n//                             <p>\n//                                 Average Score:<span> {averageScore}</span>\n//                             </p>\n//                             <p>\n//                                 Top Score:<span> {topScore}</span>\n//                             </p>\n//                             <p>\n//                                 Live Rank:<span> {liveRank}</span>\n//                             </p>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//             <div className='rightsidebar'><RightSidebar onQuestionSelect={handleQuestionSelect} answeredQuestions={answeredQuestions} /></div>\n//         </div>\n\n\n//     )\n// }\n\n// export default Paper\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport quiz from '../../Data/quesAns'\nimport './Paper.css'\nimport RightSidebar from '../../Components/RightSidebar/RightSidebar';\nimport PaperHeader from '../../Components/PaperHeader/PaperHeader'\n\n\n// Defining Timer code \nconst formatTime = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = Math.floor(time - minutes * 60);\n\n    if (minutes < 10) minutes = '0' + minutes;\n    if (seconds < 10) seconds = '0' + seconds;\n    return minutes + ':' + seconds;\n}; // End of Defining Timer code \n\n\n\nconst Paper = ({ seconds, answeredQuestions }) => {\n\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    const handleQuestionSelect = (questionNumber) => {\n        setActiveQuestion(questionNumber - 1);\n    }\n\n    // const [questionStatus, setQuestionStatus] = useState(Array(30).fill('notAnswered'))\n    // const [activeQuestion, setActiveQuestion] = useState(0)\n    // const [selectedAnswer, setSelectedAnswer] = useState('') \n\n    const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(''));\n    const [showResult, setShowResult] = useState(false)\n    const [result, setResult] = useState({\n        score: 0,\n        correctAnswers: 0,\n        wrongAnswers: 0,\n    })\n\n\n\n    const { questions } = quiz\n    const { question, choices, correctAnswer } = questions[activeQuestion]\n    const onClickNext = () => {\n        setResult((prev) =>\n            selectedAnswers[activeQuestion] === correctAnswer\n                ? {\n                    ...prev,\n                    score: prev.score + 5,\n                    correctAnswers: prev.correctAnswers + 1,\n                }\n                : { ...prev, wrongAnswers: prev.wrongAnswers + 1 }\n        );\n        if (activeQuestion !== questions.length - 1) {\n            setActiveQuestion((prev) => prev + 1);\n        } else {\n            // setActiveQuestion(0);\n            setShowResult(true);\n            calculateResult();//new added code\n        }\n    };\n\n\n    const onAnswerSelected = (OptionLetter) => {\n        // Update the selected answer for the current question\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[activeQuestion] = OptionLetter;\n        setSelectedAnswers(updatedSelectedAnswers);\n        // setSelectedAnswers(updatedSelectedAnswers, OptionLetter);\n\n    };\n\n\n\n    const clearResponse = () => {\n        // Clear the response for the current question\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[activeQuestion] = '';\n        setSelectedAnswers(updatedSelectedAnswers);\n    };\n\n    const goToPreviousQuestion = () => {\n        // Move to the previous question\n        if (activeQuestion > 0) {\n            setActiveQuestion((prev) => prev - 1);\n        }\n    };\n\n\n\n    const addLeadingZero = (number) => (number > 9 ? number : `0${number}`)\n    const [countdown, setCountDown] = useState(seconds);\n    useEffect(() => {\n        const timerId = setInterval(() => {\n            setCountDown((prevCountDown) =>\n                prevCountDown - 1\n            );\n        }, 1000)\n        return () => {\n            clearInterval(timerId);\n        };\n    }, [])\n\n    useEffect(() => {\n        if (countdown <= 0) {\n            setShowResult(true);\n            // clearInterval(timerId.current);\n            // alert(\"End\");\n        }\n    }, [countdown]);\n\n\n    // NEW ADDED CODE\n\n    // const [showResult, setShowResult] = useState(false);\n    const [accuracy, setAccuracy] = useState(0);\n    const [averageScore, setAverageScore] = useState(0);\n    const [topScore, setTopScore] = useState(0);\n    const [liveRank, setLiveRank] = useState(0);\n\n    const calculateResult = () => {\n        // Calculate accuracy\n        const totalAttempted = answeredQuestions.length;\n        const totalCorrect = result.correctAnswers;\n        const calculatedAccuracy = (totalCorrect / totalAttempted) * 100;\n        setAccuracy(calculatedAccuracy.toFixed(2));\n\n        // Calculate average score\n        const calculatedAverageScore = result.score / totalAttempted;\n        setAverageScore(calculatedAverageScore.toFixed(2));\n\n        // Placeholder for live ranking data - Replace this with actual data\n        const calculatedTopScore = 100;\n        const calculatedLiveRank = 1;\n\n        setTopScore(calculatedTopScore);\n        setLiveRank(calculatedLiveRank);\n    };\n\n    // const onClickSubmit = () => {\n    //     calculateResult();\n    //     setShowResult(true);\n    // };\n\n\n\n\n\n\n\n\n\n    return (\n\n        <div className='main'>\n            <div className='sub-main'>\n                <div><PaperHeader /></div>\n                <div className=\"quiz-container\">\n                    {!showResult ? (\n                        <div>\n                            <div className='subjects'>\n                                <button className='subject-btn'>Mathematics</button>\n                                <button className='subject-btn'>Physics</button>\n                                <button className='subject-btn'>Chemistry</button>\n                            </div>\n                            <div className='second-header'>\n                                <div className='single-select-question'>\n                                    Single Select Question\n                                </div>\n                                <div className='right-header'>\n                                    <div className='marks'>\n                                        Marks: <div className='plus-mark'>+1</div>\n                                        <div className='minus-mark'>-1</div>\n                                    </div>\n                                    <div className='timer'>\n                                        <h3>Time Left: {formatTime(countdown)}</h3>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='question-no'>\n                                <span className=\"active-question-no\">Question No. {addLeadingZero(activeQuestion + 1)}</span>\n                                <span className=\"total-question\"> of {addLeadingZero(questions.length)}</span>\n                            </div>\n\n                            <h2 className='question'><img src={question} alt=\"question\" /></h2>\n\n                            <ul className='options-container'>\n                                {choices.map((answer, index) => (\n                                    <li key={answer}>\n                                        <input type=\"radio\"\n                                            // id={answer}\n                                            id={`option-${index}`}\n                                            name='answer'\n                                            value={answer}\n                                            checked={selectedAnswers[activeQuestion] === answer}\n                                            onChange={() => onAnswerSelected(answer)} />\n\n\n                                        <label className='alpha-index' htmlFor={`option-${index}`}>\n                                            {/* htmlFor={answer} */}\n                                            {String.fromCharCode(65 + index)}.\n                                            <img src={answer} alt=\"answer\" />\n                                        </label>\n                                    </li>\n                                ))}\n                            </ul>\n\n                            <div className=\"flex-right\">\n                                <button className='clear-btn'>Mark for Review & Next</button>\n                                <button className='clear-btn' onClick={clearResponse}>Clear Response</button>\n                                <button className='previous-btn' onClick={goToPreviousQuestion} disabled={activeQuestion === 0}>\n                                    <i class=\"fa-solid fa-angles-left\"></i>\n                                    Previous\n                                </button>\n                                <button className='save-btn' onClick={onClickNext} disabled={!selectedAnswers[activeQuestion]}>\n                                    {activeQuestion === questions.length - 1 ? 'Submit' : 'Save & Next'}<i class=\"fa-solid fa-angles-right\"></i>\n                                </button>\n\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"result\">\n                            <h3>Result</h3>\n                            <p>\n                                Total Questions: <span>{questions.length}</span>\n                            </p>\n                            <p>\n                                Total Score:<span> {result.score}</span>\n                            </p>\n                            <p>\n                                Correct Answers:<span> {result.correctAnswers}</span>\n                            </p>\n                            <p>\n                                Wrong Answers:<span> {result.wrongAnswers}</span>\n                            </p>\n                            <p>\n                                Accuracy:<span> {accuracy}%</span>\n                            </p>\n                            <p>\n                                Average Score:<span> {averageScore}</span>\n                            </p>\n                            <p>\n                                Top Score:<span> {topScore}</span>\n                            </p>\n                            <p>\n                                Live Rank:<span> {liveRank}</span>\n                            </p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className='rightsidebar'><RightSidebar onQuestionSelect={handleQuestionSelect} answeredQuestions={answeredQuestions} /></div>\n        </div>\n\n\n    )\n}\n\nexport default Paper\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,aAAa;AACpB,OAAOC,YAAY,MAAM,4CAA4C;AACrE,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}